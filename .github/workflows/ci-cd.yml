name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 3Ô∏è‚É£ Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4Ô∏è‚É£ Build and run tests
      - name: Build and run tests with coverage
        run: mvn clean verify -B

      # 5Ô∏è‚É£ Upload JaCoCo HTML report (optional)
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco-merged/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: target/site/jacoco-merged/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}  # Required for v4

      # 7Ô∏è‚É£ Warn if coverage < 75% (optional)
      - name: Calculate Line Coverage
        run: |
          JACOCO_FILE="target/site/jacoco-merged/jacoco.xml"
          
          if [ ! -f "$JACOCO_FILE" ]; then
            echo "‚ùå JaCoCo file not found at $JACOCO_FILE"
            exit 1
          fi
          
          # Extract the root LINE counter (last occurrence in file)
          LINE_DATA=$(grep -E '<counter type="LINE"' "$JACOCO_FILE" | tail -1)
          echo "LINE_DATA:    $LINE_DATA"
          
          # Extract missed and covered values
          MISSED=$(echo "$LINE_DATA" | sed 's/.*missed="\([0-9]*\)".*/\1/')
          COVERED=$(echo "$LINE_DATA" | sed 's/.*covered="\([0-9]*\)".*/\1/')
          TOTAL=$((MISSED + COVERED))
          
          # Calculate percentage
          if [ "$TOTAL" -gt 0 ]; then
            PERCENTAGE=$(echo "scale=2; $COVERED * 100 / $TOTAL" | bc)
          else
            PERCENTAGE="0.00"
          fi
          
          # Display results
          echo "üìä Line Coverage Summary"
          echo "======================="
          echo "Missed:    $MISSED"
          echo "Covered:   $COVERED" 
          echo "Total:     $TOTAL"
          echo "Coverage:  $PERCENTAGE%"
          
          # Set environment variable for later use