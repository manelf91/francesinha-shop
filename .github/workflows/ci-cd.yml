name: Francesinha-Shop CI/CD

on:
  push:
    branches: [ microservices ]
  pull_request:
    branches: [ microservices ]

jobs:
  # Job 1: Build, Test, and Coverage for each service
  build-test-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [services-auth, services-products, services-reviews]

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # 3Ô∏è‚É£ Build & run tests (unit + integration)
      - name: Build & Test ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: mvn clean verify

      # 4Ô∏è‚É£ Upload JaCoCo HTML report (optional)
      - name: Upload JaCoCo report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-${{ matrix.service }}
          path: ${{ matrix.service }}/target/site/jacoco-merged/

      # 5Ô∏è‚É£ Upload coverage reports to Codecov
      - name: Upload coverage reports to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          file: ${{ matrix.service }}/target/site/jacoco-merged/jacoco.xml
          flags: unittests
          name: codecov-${{ matrix.service }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      # 6Ô∏è‚É£ Warn if coverage < 75%
      - name: Calculate Line Coverage
        if: success()
        run: |
          JACOCO_FILE="${{ matrix.service }}/target/site/jacoco-merged/jacoco.xml"
          
          if [ ! -f "$JACOCO_FILE" ]; then
            echo "‚ùå JaCoCo file not found at $JACOCO_FILE"
            exit 1
          fi
          
          LINE_COUNTERS=$(grep -o '<counter type="INSTRUCTION"[^>]*>' "$JACOCO_FILE")
          LINE_DATA=$(echo "$LINE_COUNTERS" | tail -1)
          
          MISSED=$(echo "$LINE_DATA" | sed 's/.*missed="\([0-9]*\)".*/\1/')
          COVERED=$(echo "$LINE_DATA" | sed 's/.*covered="\([0-9]*\)".*/\1/')
          TOTAL=$((MISSED + COVERED))
          
          if [ "$TOTAL" -gt 0 ]; then
            PERCENTAGE=$(echo "scale=2; $COVERED * 100 / $TOTAL" | bc)
          else
            PERCENTAGE="0.00"
          fi

          echo "üìä Line Coverage Summary for ${{ matrix.service }}"
          echo "======================="
          echo "Missed:    $MISSED"
          echo "Covered:   $COVERED" 
          echo "Total:     $TOTAL"
          echo "Coverage:  $PERCENTAGE%"

          if (( $(echo "$PERCENTAGE < 60" | bc -l) )); then
            echo "‚ö†Ô∏è Coverage is below 60%!"
            exit 1
          fi

  # Job 2: E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-test-coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Run E2E Tests
        run: |
          cd e2e-tests
          docker-compose up --build --abort-on-container-exit

      - name: Upload JaCoCo report (E2E)
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-e2e
          path: e2e-tests/target/site/jacoco-merged/

      - name: Upload coverage reports to Codecov (E2E)
        uses: codecov/codecov-action@v4
        with:
          file: e2e-tests/target/site/jacoco-merged/jacoco.xml
          flags: e2e
          name: codecov-e2e
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Tear down containers
        if: always()
        run: |
          cd e2e-tests
          docker-compose down -v