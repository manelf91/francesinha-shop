name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # 3Ô∏è‚É£ Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4Ô∏è‚É£ Build and run tests
      - name: Build and run tests with coverage
        run: mvn clean verify -B

      # 5Ô∏è‚É£ Upload JaCoCo HTML report (optional)
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco-merged/

      # 6Ô∏è‚É£ Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: target/site/jacoco-merged/jacoco.xml
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      # 7Ô∏è‚É£ Warn if coverage < 75% (optional)
      - name: Check coverage
        run: |
          LINE=$(grep '<counter type="LINE"' target/site/jacoco-merged/jacoco.xml)
          MISSED=$(echo "$LINE" | sed -E 's/.*missed="([0-9]+)".*/\1/')
          COVERED=$(echo "$LINE" | sed -E 's/.*covered="([0-9]+)".*/\1/')
          TOTAL=$((MISSED + COVERED))
      
          if [ "$TOTAL" -eq 0 ]; then
          echo "‚ùå No line coverage data found. Did JaCoCo run?"
          exit 0
          fi
      
          PERCENT=$(awk "BEGIN {printf \"%.2f\", ($COVERED / $TOTAL) * 100}")
          echo "üìä Total line coverage: $PERCENT%"
      
          if (( $(echo "$PERCENT < 75" | bc -l) )); then
          echo "‚ö†Ô∏è Warning: Coverage is below 75%"
          fi